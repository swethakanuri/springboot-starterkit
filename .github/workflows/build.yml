name: Maven CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Maven Build, Unit Testing, Functional Testing, Performance Testing, SonarQube Scan
  build:
    name: Build and Test
    runs-on: self-hosted

    services:
      sonar:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -s http://localhost:9000/api/system/health | grep -q UP"
          --health-interval=20s
          --health-timeout=10s
          --health-retries=15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies and run Maven build
        run: mvn clean install

      - name: Run Unit Tests
        run: mvn test

      - name: Run Functional Tests
        run: mvn verify -Dtest=**/FunctionalTest

      - name: Run Performance Tests
        run: mvn verify -Dtest=**/PerformanceTest

      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Your SonarQube token
        run: mvn sonar:sonar -Dsonar.projectKey=my-app -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN

  # Job 2: Docker Build, Nexus Push, JFrog Push
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t my-app:${{ github.sha }} .
      
      - name: Push Docker image to Nexus
        run: |
          docker tag my-app:${{ github.sha }} nexus.example.com/my-app:${{ github.sha }}
          echo "${{ secrets.NEXUS_PASSWORD }}" | docker login nexus.example.com -u "${{ secrets.NEXUS_USERNAME }}" --password-stdin
          docker push nexus.example.com/my-app:${{ github.sha }}

      - name: Push Docker image to JFrog
        run: |
          docker tag my-app:${{ github.sha }} jfrog.example.com/my-app:${{ github.sha }}
          echo "${{ secrets.JFROG_PASSWORD }}" | docker login jfrog.example.com -u "${{ secrets.JFROG_USERNAME }}" --password-stdin
          docker push jfrog.example.com/my-app:${{ github.sha }}

      - name: Logout from Docker Hub
        run: docker logout
